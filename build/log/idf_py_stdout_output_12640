[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "C:\Espressif\frameworks\esp-idf-v5.0.1\examples\Hobby projects\IoT_project\internet-server\build\bootloader\esp-idf\esptool_py" && c:\Espressif\frameworks\esp-idf-v5.0.1\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/IoT_project/internet-server/build/bootloader/bootloader.bin""
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/toggle_led.c.obj
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable internet-server.elf
[7/9] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/IoT_project/internet-server/build/internet-server.bin
[8/9] cmd.exe /C "cd /D "C:\Espressif\frameworks\esp-idf-v5.0.1\examples\Hobby projects\IoT_project\internet-server\build\esp-idf\esptool_py" && c:\Espressif\frameworks\esp-idf-v5.0.1\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/IoT_project/internet-server/build/partition_table/partition-table.bin" "C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/IoT_project/internet-server/build/internet-server.bin""
internet-server.bin binary size 0xc4350 bytes. Smallest app partition is 0x100000 bytes. 0x3bcb0 bytes (23%) free.
[8/9] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0.1\components\esptool_py && C:\Espressif\frameworks\esp-idf-v5.0.1\tools\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.0.1 -D SERIAL_TOOL=c:/Espressif/frameworks/esp-idf-v5.0.1/tools/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D "WORKING_DIRECTORY=C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/IoT_project/internet-server/build" -P C:/Espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 internet-server.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM4
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 7c:87:ce:f4:8d:34
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000d4fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26384 bytes to 16451...
Writing at 0x00001000... (50 %)
Writing at 0x000076ae... (100 %)
Wrote 26384 bytes (16451 compressed) at 0x00001000 in 0.8 seconds (effective 266.7 kbit/s)...
Hash of data verified.
Compressed 803664 bytes to 517649...
Writing at 0x00010000... (3 %)
Writing at 0x0001c1e0... (6 %)
Writing at 0x00025381... (9 %)
Writing at 0x0002a8bd... (12 %)
Writing at 0x00034623... (15 %)
Writing at 0x00039ffc... (18 %)
Writing at 0x0003fa9c... (21 %)
Writing at 0x0004550f... (25 %)
Writing at 0x0004ae6e... (28 %)
Writing at 0x00050953... (31 %)
Writing at 0x0005603d... (34 %)
Writing at 0x0005b6ba... (37 %)
Writing at 0x00060e96... (40 %)
Writing at 0x00066815... (43 %)
Writing at 0x0006c472... (46 %)
Writing at 0x00072093... (50 %)
Writing at 0x00077bac... (53 %)
Writing at 0x0007cdc3... (56 %)
Writing at 0x0008222f... (59 %)
Writing at 0x00087432... (62 %)
Writing at 0x0008cc1d... (65 %)
Writing at 0x0009232f... (68 %)
Writing at 0x00097f02... (71 %)
Writing at 0x0009d608... (75 %)
Writing at 0x000a2f74... (78 %)
Writing at 0x000a92c6... (81 %)
Writing at 0x000af6b8... (84 %)
Writing at 0x000b5123... (87 %)
Writing at 0x000bbe5e... (90 %)
Writing at 0x000c5787... (93 %)
Writing at 0x000cb75f... (96 %)
Writing at 0x000d0e64... (100 %)
Wrote 803664 bytes (517649 compressed) at 0x00010000 in 12.5 seconds (effective 514.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 424.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
