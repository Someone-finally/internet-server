[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "C:\Espressif\frameworks\esp-idf-v5.0.1\examples\Hobby projects\IoT_project\internet-server\build\bootloader\esp-idf\esptool_py" && c:\Espressif\frameworks\esp-idf-v5.0.1\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/IoT_project/internet-server/build/bootloader/bootloader.bin""
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/9] cmd.exe /C "cd /D "C:\Espressif\frameworks\esp-idf-v5.0.1\examples\Hobby projects\IoT_project\internet-server\build\esp-idf\main" && c:\Espressif\frameworks\esp-idf-v5.0.1\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.1/components/fatfs/fatfsgen.py "C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/IoT_project/internet-server/site/dist" --long_name_support --use_default_datetime --partition_size 0x200000 --output_file "C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/IoT_project/internet-server/build/storage.bin" --sector_size 4096 --sectors_per_cluster 1 --fat_type 0"
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable internet-server.elf
[7/9] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/IoT_project/internet-server/build/internet-server.bin
[8/9] cmd.exe /C "cd /D "C:\Espressif\frameworks\esp-idf-v5.0.1\examples\Hobby projects\IoT_project\internet-server\build\esp-idf\esptool_py" && c:\Espressif\frameworks\esp-idf-v5.0.1\tools\python_env\idf5.0_py3.8_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/IoT_project/internet-server/build/partition_table/partition-table.bin" "C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/IoT_project/internet-server/build/internet-server.bin""
internet-server.bin binary size 0xd24d0 bytes. Smallest app partition is 0x100000 bytes. 0x2db30 bytes (18%) free.
[8/9] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0.1\components\esptool_py && C:\Espressif\frameworks\esp-idf-v5.0.1\tools\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.0.1 -D SERIAL_TOOL=c:/Espressif/frameworks/esp-idf-v5.0.1/tools/python_env/idf5.0_py3.8_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D "WORKING_DIRECTORY=C:/Espressif/frameworks/esp-idf-v5.0.1/examples/Hobby projects/IoT_project/internet-server/build" -P C:/Espressif/frameworks/esp-idf-v5.0.1/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 internet-server.bin 0x8000 partition_table/partition-table.bin 0x110000 storage.bin
esptool.py v4.5.1
Serial port COM4
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 7c:87:ce:f4:8d:34
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000e2fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00110000 to 0x0030ffff...
Compressed 26384 bytes to 16453...
Writing at 0x00001000... (50 %)
Writing at 0x000076ad... (100 %)
Wrote 26384 bytes (16453 compressed) at 0x00001000 in 0.8 seconds (effective 262.8 kbit/s)...
Hash of data verified.
Compressed 861392 bytes to 555150...
Writing at 0x00010000... (2 %)
Writing at 0x0001b48b... (5 %)
Writing at 0x00025fc8... (8 %)
Writing at 0x0002b1b3... (11 %)
Writing at 0x00033a71... (14 %)
Writing at 0x0003ac9f... (17 %)
Writing at 0x000405b4... (20 %)
Writing at 0x00046128... (23 %)
Writing at 0x0004b915... (26 %)
Writing at 0x0005138e... (29 %)
Writing at 0x00056c2b... (32 %)
Writing at 0x0005c3f1... (35 %)
Writing at 0x00061ac6... (38 %)
Writing at 0x00067301... (41 %)
Writing at 0x0006cc7e... (44 %)
Writing at 0x000729af... (47 %)
Writing at 0x000784cd... (50 %)
Writing at 0x0007e11d... (52 %)
Writing at 0x0008336a... (55 %)
Writing at 0x00088816... (58 %)
Writing at 0x0008d9c4... (61 %)
Writing at 0x0009314a... (64 %)
Writing at 0x0009883d... (67 %)
Writing at 0x0009e271... (70 %)
Writing at 0x000a3a82... (73 %)
Writing at 0x000a9443... (76 %)
Writing at 0x000af73f... (79 %)
Writing at 0x000b5b30... (82 %)
Writing at 0x000bb5c6... (85 %)
Writing at 0x000c1655... (88 %)
Writing at 0x000c99e5... (91 %)
Writing at 0x000d1f14... (94 %)
Writing at 0x000d7e8e... (97 %)
Writing at 0x000dd73b... (100 %)
Wrote 861392 bytes (555150 compressed) at 0x00010000 in 13.5 seconds (effective 510.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 119...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (119 compressed) at 0x00008000 in 0.1 seconds (effective 420.5 kbit/s)...
Hash of data verified.
Compressed 2097152 bytes to 52805...
Writing at 0x00110000... (25 %)
Writing at 0x00121ee0... (50 %)
Writing at 0x0012ef30... (75 %)
Writing at 0x0013c9cf... (100 %)
Wrote 2097152 bytes (52805 compressed) at 0x00110000 in 13.9 seconds (effective 1202.9 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
